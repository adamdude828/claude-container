FROM ubuntu:22.04

# Set up non-interactive frontend
ENV DEBIAN_FRONTEND=noninteractive

# Install essential build tools and libraries
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    curl \
    wget \
    software-properties-common \
    ca-certificates \
    gnupg \
    lsb-release \
    openssh-client \
    unzip \
    zip \
    jq \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js 20 LTS (required for Claude Code)
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && \
    rm -rf /var/lib/apt/lists/*

# Verify Node.js version
RUN node_version=$(node --version | cut -d'v' -f2 | cut -d'.' -f1) && \
    if [ "$node_version" -lt 18 ]; then \
        echo "Error: Node.js 18+ is required but got version $node_version"; \
        exit 1; \
    fi

# Install Claude Code globally
RUN npm install -g @anthropic-ai/claude-code

# Install additional Node.js package managers
RUN npm install -g yarn pnpm

# Install Python versions with pyenv
ENV PYENV_ROOT="/root/.pyenv"
ENV PATH="$PYENV_ROOT/bin:$PATH"
RUN curl https://pyenv.run | bash && \
    eval "$(pyenv init -)" && \
    pyenv install 3.11.10 && \
    pyenv global 3.11.10

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:$PATH"

# Install Go
RUN wget -O go.tar.gz https://go.dev/dl/go1.23.8.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go.tar.gz && \
    rm go.tar.gz
ENV PATH="/usr/local/go/bin:$PATH"

# Install Python package managers
RUN pip install --upgrade pip && \
    pip install poetry uv ruff black mypy

# Install GitHub CLI
RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg && \
    chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null && \
    apt update && \
    apt install gh -y && \
    rm -rf /var/lib/apt/lists/*

# No runtime overrides

# No custom environment variables

# Copy project code
COPY . /workspace

# Set working directory
WORKDIR /workspace

# Default command
CMD ["claude"]
