[tool.poetry]
name = "claude-container"
version = "0.1.0"
description = ""
authors = ["Adam Holsinger <adamholsinger@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.2.1"
docker = "^7.1.0"
pyyaml = "^6.0.2"
pydantic = "^2.0.0"
tabulate = "^0.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-mock = "^3.12.0"
pytest-cov = "^5.0.0"
ruff = "^0.1.0"
mypy = "^1.0.0"

[tool.poetry.scripts]
claude-container = "claude_container.cli.main:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --cov=claude_container --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["claude_container"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError"
]
precision = 2
show_missing = true

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "W",    # pycodestyle warnings
    "UP",   # pyupgrade
    "C90",  # mccabe complexity
]
ignore = []

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__ files

[tool.ruff.lint.pycodestyle]
max-line-length = 120
max-doc-length = 120

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 15
max-returns = 6
max-statements = 50

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
